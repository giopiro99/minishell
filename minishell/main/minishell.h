/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   minishell.h                                        :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: gpirozzi <giovannipirozzi12345@gmail.co    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/03/27 15:38:54 by gpirozzi          #+#    #+#             */
/*   Updated: 2025/05/20 19:04:06 by gpirozzi         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#ifndef MINISHELL_H
# define MINISHELL_H

# include "../libft/libft.h"
# include "../builtin/builtin.h"
# include "../tokens/tokens.h"
# include "../redirections/redirections.h"
# include "../common_utils/common_utils.h"
# include "../command_list/command.h"
# include "../system_commands/system_commands.h"
# include "../pipes/pipes.h"

/**
 * @brief Executes the commands (built-in or system) present in the list.
 *
 * Iterates through the command list, identifies if commands are built-in
 * or external, and executes them accordingly.
 *
 * @param cmd_list List of commands to execute
 * @param env Pointer to the environment structure
 * @param token Tokens associated with the command
 */
void	ft_exe_cmd(t_cmd *cmd_list, t_env *env, t_token *token);

/**
 * @brief Manages the main loop of the minishell program.
 *
 * Reads user input, handles signals,
 * tokenizes the input, and starts the execution flow.
 *
 * @param input Pointer to the user input string
 * @param env Pointer to the environment structure
 */
void	ft_main_flow(char **input, t_env **env);

/**
 * @brief Handles token processing and command execution.
 *
 * Checks syntax validity, verifies if the command
 * is just an environment variable, and then executes the command.
 *
 * @param tokens List of tokens generated by the parser
 * @param head_env Pointer to the environment
 * @param cmd Pointer to the command list
 */
void	ft_token_flow(t_token *tokens, t_env *head_env, t_cmd **cmd);

#endif
